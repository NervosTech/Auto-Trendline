//@version=5
indicator("Auto Trendline, Triangle, Breakout, S/R (Upgraded)", overlay=true)

// === Input Settings ===
pivotLen = input.int(5, "Pivot Strength", minval=1)
srLookback = input.int(100, "Support/Resistance Lookback", minval=10)
breakoutSensitivity = input.float(1.5, "Breakout Sensitivity (x ATR)", minval=0.1)
showZones = input.bool(true, "Highlight S/R Zones")
showLabels = input.bool(true, "Show S/R Labels")
maxLabels = input.int(10, "Max Labels on Chart", minval=1, maxval=100)

// === Pivot Detection ===
ph = ta.pivothigh(high, pivotLen, pivotLen)
pl = ta.pivotlow(low, pivotLen, pivotLen)

// === Store Last 2 Pivots ===
var phVals = array.new_float()
var phBars = array.new_int()

var plVals = array.new_float()
var plBars = array.new_int()

if not na(ph)
    array.unshift(phVals, ph)
    array.unshift(phBars, bar_index - pivotLen)
    if array.size(phVals) > 2
        array.pop(phVals)
        array.pop(phBars)

if not na(pl)
    array.unshift(plVals, pl)
    array.unshift(plBars, bar_index - pivotLen)
    if array.size(plVals) > 2
        array.pop(plVals)
        array.pop(plBars)

// === Draw Trendlines ===
if array.size(phVals) == 2 and array.size(phBars) == 2
    line.new(array.get(phBars, 1), array.get(phVals, 1), array.get(phBars, 0), array.get(phVals, 0), 
             extend=extend.right, color=color.red, width=1)

if array.size(plVals) == 2 and array.size(plBars) == 2
    line.new(array.get(plBars, 1), array.get(plVals, 1), array.get(plBars, 0), array.get(plVals, 0), 
             extend=extend.right, color=color.green, width=1)

// === Triangle Formation ===
if array.size(phVals) > 0 and array.size(plVals) > 0
    line.new(array.get(phBars, 0), array.get(phVals, 0), array.get(plBars, 0), array.get(plVals, 0), 
             extend=extend.none, color=color.blue, style=line.style_dashed)

// === Breakout Detection ===
atr = ta.atr(14)
ph1 = array.size(phVals) > 0 ? array.get(phVals, 0) : na
pl1 = array.size(plVals) > 0 ? array.get(plVals, 0) : na

breakoutUp = not na(ph1) and close > ph1 + breakoutSensitivity * atr
breakoutDown = not na(pl1) and close < pl1 - breakoutSensitivity * atr

plotshape(breakoutUp, title="Breakout Up", location=location.belowbar, color=color.green, 
          style=shape.labelup, text="Break ↑")
plotshape(breakoutDown, title="Breakout Down", location=location.abovebar, color=color.red, 
          style=shape.labeldown, text="Break ↓")

// === S/R Levels ===
srHigh = ta.valuewhen(high == ta.highest(high, srLookback), high, 0)
srLow = ta.valuewhen(low == ta.lowest(low, srLookback), low, 0)

plot(srHigh, "Resistance", color=color.orange, linewidth=1, style=plot.style_linebr)
plot(srLow, "Support", color=color.teal, linewidth=1, style=plot.style_linebr)

// === Zones & Labels ===
bgcolor(showZones and close >= srHigh ? color.new(color.orange, 85) : na)
bgcolor(showZones and close <= srLow ? color.new(color.teal, 85) : na)

var srLabels = array.new<label>()
if showLabels and bar_index % 50 == 0
    array.push(srLabels, label.new(bar_index, srHigh, "Resistance", 
                                   style=label.style_label_down, color=color.orange, textcolor=color.white))
    array.push(srLabels, label.new(bar_index, srLow, "Support", 
                                   style=label.style_label_up, color=color.teal, textcolor=color.white))
    if array.size(srLabels) > maxLabels
        label.delete(array.shift(srLabels))
